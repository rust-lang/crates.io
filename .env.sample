# Location of the *postgres* database. For example, if you have created a
# blank database locally named `cargo_registry`, this would be
# `postgres://postgres@localhost/cargo_registry`.
export DATABASE_URL=

# Allowed origins - any origins for which you want to allow browser
# access to authenticated endpoints.
export WEB_ALLOWED_ORIGINS=http://localhost:8888,http://localhost:4200

# If you're running an instance of the application on a domain different than
# crates.io, uncomment this line and set the variable to your domain name.
# export DOMAIN_NAME=staging.crates.io

# Key to sign and encrypt cookies with. Must be at least 32 bytes. Change this
# to a long, random string for production.
export SESSION_KEY=badkeyabcdefghijklmnopqrstuvwxyzabcdef

# If you will be running the tests, set this to another database that you
# have created. For example, if your test database is named
# `cargo_registry_test`, this would look something like
# `postgres://postgres@localhost/cargo_registry_test`
# If you don't plan on running the tests, you can leave this blank.
export TEST_DATABASE_URL=

# Credentials for AWS.
# export AWS_ACCESS_KEY=
# export AWS_SECRET_KEY=

# Configuration for uploading packages to S3. You can leave these commented
# out if you're not publishing to s3 from your crates.io instance.
# Uses AWS credentials.
# export S3_BUCKET=
# not needed if the S3 bucket is in US standard
# export S3_REGION=

# Configuration for uploading index metadata to S3. You can leave these commented
# out if you're not publishing index metadata to s3 from your crates.io instance.
# Uses AWS credentials.
# export S3_INDEX_BUCKET=
# not needed if the S3 bucket is in US standard
# export S3_INDEX_REGION=

# Configuration for invalidating cached files on CloudFront. You can leave these
# commented out if you're not using CloudFront caching for the index files.
# Uses AWS credentials.
# export CLOUDFRONT_DISTRIBUTION=

# Configuration for the CDN log queue. You can leave these commented out if
# you're not using the CDN log queue.
# export CDN_LOG_QUEUE_ACCESS_KEY=
# export CDN_LOG_QUEUE_SECRET_KEY=
# export CDN_LOG_QUEUE_URL=
# export CDN_LOG_QUEUE_REGION=

# Configuration for the version downloads data archive.
# You can leave these commented out if you're not using the archival process.
# export DOWNLOADS_ARCHIVE_ACCESS_KEY=
# export DOWNLOADS_ARCHIVE_SECRET_KEY=
# export DOWNLOADS_ARCHIVE_REGION=
# export DOWNLOADS_ARCHIVE_BUCKET=

# Upstream location of the registry index. Background jobs will push to
# this URL. The default points to a local index for development.
# Run `./script/init-local-index.sh` to initialize this repo.
export GIT_REPO_URL=file://$PWD/tmp/index-bare

# Credentials for talking to GitHub. You can leave these blank if you're
# not logging into your crates.io instance.
# When registering a new application on GitHub for use with your local
# crates.io instance, be sure to set the callback url for that application
# to the address `http://localhost:4200/github-redirect.html`.
export GH_CLIENT_ID=
export GH_CLIENT_SECRET=

# Credentials for configuring Mailgun. You can leave these commented out
# if you are not interested in actually sending emails. If left empty,
# a mock email will be sent to a file in your local '/tmp/' directory.
# If interested in setting up Mailgun to send emails, you will have
# to create an account with Mailgun and modify these manually.
# If running a crates mirror on heroku, you can instead add the Mailgun
# app to your instance and shouldn't have to mess with these.
# export MAILGUN_SMTP_LOGIN=
# export MAILGUN_SMTP_PASSWORD=
# export MAILGUN_SMTP_SERVER=

# Credentials for connecting to the Sentry error reporting service.
# export SENTRY_DSN_API=
export SENTRY_ENV_API=local
